{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.html","./src/app/app.component.scss","./src/app/app.component.ts","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;ACVA,4ZAA4Z,QAAQ,uyD;;;;;;;ACApa,mB;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACE;AACoC;AACb;AACQ;AAE3B;AAmB/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;gBACb,yEAAc;gBACd,2EAAmB;gBACnB,gFAAqB;gBACrB,qGAAuB;gBACvB,mEAAW;gBACX,iEAAU;aACX;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;AC1BtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,+EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n<form class=\\\"example-form\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input type=\\\"text\\\" placeholder=\\\"search word\\\" aria-label=\\\"Number\\\" matInput [formControl]=\\\"searchTerm\\\" [matAutocomplete]=\\\"auto\\\">\\r\\n    <mat-autocomplete #auto=\\\"matAutocomplete\\\">\\r\\n      <mat-option *ngFor=\\\"let item of searchResult\\\" [value]=\\\"item\\\">\\r\\n        {{ item }}\\r\\n      </mat-option>\\r\\n    </mat-autocomplete>\\r\\n  </mat-form-field>\\r\\n</form>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"container-fluid\\\">\\r\\n  <h2>Running Angular: 5.2.9</h2>\\r\\n  <hr />\\r\\n  <ul>\\r\\n    <li>\\r\\n      Angular er oppdatert - se package.json\\r\\n    </li>\\r\\n    <li>\\r\\n      <a href=\\\"https://ng-bootstrap.github.io/#/home\\\">Installert ng-bootstrap</a>\\r\\n    </li>\\r\\n    <li>\\r\\n      Installert og satt opp routing:\\r\\n      <a routerLink=\\\"/home\\\">Home</a>,\\r\\n      <a routerLink=\\\"/about\\\">About</a>\\r\\n    </li>\\r\\n    <li><a href=\\\"https://www.youtube.com/watch?v=Nehk4tBxD4o\\\">Bra video om routing</a></li>\\r\\n    <li>\\r\\n      <a href=\\\"https://www.npmjs.com/\\\">Npm bibliotek</a>\\r\\n    </li>\\r\\n    <li>\\r\\n      npm kommandoer<br />\\r\\n      <ul>\\r\\n        <li>\\r\\n          <code>ng build</code>\\r\\n        </li>\\r\\n        <li>\\r\\n          <code>ng build --watch</code>\\r\\n        </li>\\r\\n        <li>\\r\\n          <code>ctrl + c (y)</code>\\r\\n        </li>\\r\\n        <li>\\r\\n          <code>ng g c komponent_navn</code>\\r\\n        </li>\\r\\n        <li>\\r\\n          <code>npm install/uninstall .. --save</code>\\r\\n        </li>\\r\\n        <li>\\r\\n          <code>ng -v</code>\\r\\n        </li>\\r\\n        <li>\\r\\n          <code>ng serve</code>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </li>\\r\\n    <li><a href=\\\"https://codehandbook.org/how-to-implement-auto-complete-in-angular-4/\\\">Mulig autocomplete</a></li>\\r\\n    <li>\\r\\n      <a href=\\\"https://dotnetthoughts.net/how-to-use-angular4-wth-aspnet-mvc/\\\">Følgte denne guiden</a>\\r\\n      <ul>\\r\\n        <li>Dette ligner veldig på det vi gjorde i webapp</li>\\r\\n        <li>Bootstrap 4.0 fikk jeg ikke til, valgte bare å inkludere den som cdn for nå</li>\\r\\n      </ul>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.scss\n// module id = ./src/app/app.component.scss\n// module chunks = main","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule } from '@angular/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule, MatInputModule } from '@angular/material';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    HttpModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}